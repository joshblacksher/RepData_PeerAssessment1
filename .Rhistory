library(devtools)
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
x <- list(a=1:5, b=rnorm(10))
x
lapply(x,mean)
x
?runif
runif()
runif(1)
runif(100)
runif(12)
?gl
gl(3,10)
log(-1)
log(-1:10)
sqrt(2)
sqrt(1:20)
x
library(datasets)
data(iris)
iris
head(iris)
head(iris$Sepal.Length)
tapply(iris$Sepal.Length, iris$Species, mean)
colMeans(iris)
apply(iris, 2, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg,mtcars$cyl,  mean)
tapply(mtcars$hp, mtcars$cyl,  mean)
209.21429 - 82.63636
debug(ls)
ls
ls()
quit
exit
return
q
q
library(xlsx)
library(xlsx)
version
packageStatus()
?plot
rm(x)
x <- c(2,3,4,5,6,5,4,5,6,7,8,9)
plot(x)
plot(x,.)
plot(x,".")
plot(x,'.')
y <- x*2
plot(x,y)
plot(x,y,".")
plot(x,y,'.')
plot(x,y,'-')
?plot
plot(x,y,"b")
plot(x,y,x)
plot(x,y,"o")
z <- x*y
symbols(x,y)
?symbols
symbols(x,y,cirles=z)
symbols(x,y,circles=z)
?segments
?par
?segments
load("~/GitHub/play/.RData")
setwd("~/GitHub/play")
?pairs
pairs(df)
View(df)
df[,c(2,3,5,6)]
df2 <- df[,c(6,2,3,5)]
pairs(df2)
pairs(df,subset=Name)
pairs(df,subset=df$Name)
library(lattice)
warnings()
warnings()
library(lattice)
?splom
View(df2)
pairs(df2)
df2[,df2$Name=="ECL"]
df2[,Name=="ECL"]
df2[,df2$Name=="ECL"]
df2[,c(1,3,4)]
pairs(df2[,c(1,3,4)])
scatterplot.matrix
?scatterplot.matrix
library(car)
?pairs
pairs(df2)
pairs(df2, color=df2$Name)
pairs(df2, group=df2$Name)
install.packages("car")
library(car)
?scatterplot.matrix
?scatterplotMatrix
scatterplotMatrix(df2)
scatterplotMatrix(df2, groups=Name)
scatterplotMatrix(df2, groups=df2$Name)
warnings()
scatterplotMatrix(df2[,c(1,3,4)], groups=df2$Name)
plot(df)
?plot
plot(df2)
plot(df2$MonthNum,df2$ScoreNum)
plot(df2$MonthNum,df2$ScoreNum, group=df2$Name)
plot(df2$MonthNum,df2$ScoreNum, color=df2$Name)
library(lattice)
xyplot(x,y)
?xyplot
xyplot(x)
x <- [1:100]
x <- 1:100
y <- 1:100
plot(x,y)
xyplot(x,y)
?xyplot
xyplot(x ~ y)
l <- xyplot(x ~ y)
class(l)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
rm(list=ls())
load("~/GitHub/play/.RData")
library(ggplot2)
qplot(x=MonthNum, y=ScoreNum, data=df, color=Name) + geom_line() + geom_point(aes(size=Volume)) + scale_size_area(max_size=25)
qplot(x=MonthNum, y=ScoreNum, data=df, color=Name, fill=Name) + geom_ribbon(aes(ymin=ScoreNum-Volume/9000,ymax=ScoreNum+Volume/9000), alpha=0.5) + geom_line()
load("~/GitHub/RepData_PeerAssessment1/.RData")
load("~/GitHub/RepData_PeerAssessment1/.Rhistory")
rm(y)
rm(y2)
thedata[285:300,]
thedata[285:310,]
thedata[285:300,]
thedata.nona <- thedata[285:300,]
?apply
apply(thedata.nona, 1, function(x) { x[1] } )
apply(thedata.nona, 1, function(x) { x[[1] } )
apply(thedata.nona, 1, function(x) { x[[1]] } )
apply(thedata.nona, 1, function(x) { x[1,1 } )
apply(thedata.nona, 1, function(x) { x[1,1] } )
apply(thedata.nona, 1, function(x) { x[1] } )
apply(thedata.nona, 1, function(x) { if(is.na(x[1]) {99} } )
apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {99} } )
apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {99} else {x[1]} )
apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {99} else {x[1]} })
y<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {99} else {x[1]} })
class(y)
str(y)
y<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {x[1]=99} else {x[1]=x[1]} })
y
y<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {x[1]=99} else {x[1]=x[1]} x })
y<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {x[1]=99} else {x[1]=x[1]}; x })
y
?sapply
?tapply
?lapply
thedata.nona
y<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {x[3]} else {x[1]} })
y
y<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {as.integer(x[3])} else {as.integer(x[1])} })
y
y<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {as.integer(x[3])} else {as.integer(x[1])} })
y
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {as.integer(x[3])} else {as.integer(x[1])} })
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {as.integer(averagesteps[averagesteps$interval[x[3]]])} else {as.integer(x[1])} })
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {as.integer(averagesteps[averagesteps$interval[x[3]],])} else {as.integer(x[1])} })
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {as.integer(averagesteps[averagesteps$interval[x[3]],2])} else {as.integer(x[1])} })
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {as.integer(averagesteps[averagesteps$interval[x[3]],])} else {as.integer(x[1])} })
y<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {as.integer(x[3])} else {as.integer(x[1])} })
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) { if(is.na(x[1])) {as.integer(x[3])} else {as.integer(x[1])} })
averagesteps[averagesteps$steps==2340,]
averagesteps[averagesteps$steps==int(2340),]
averagesteps[averagesteps$steps==integer(2340),]
averagesteps[averagesteps$steps==integer(2340),2]
averagesteps[averagesteps$steps=integer(2340),2]
class(thedata)
subset(averagesteps,steps==2340)
subset(averagesteps,steps>2340)
subset(averagesteps,steps>2340)
class(2340)
subset(averagesteps,steps==as.integer(2340)
)
subset(averagesteps,steps==as.integer(2340))
subset(averagesteps,steps==as.integer(20))
subset(averagesteps,steps==20)
subset(averagesteps,steps=="20")
averagesteps
subset(averagesteps,interval==2340)
subset(averagesteps,interval==2340)[2]
subset(averagesteps,interval==2340)[1,2]
thedata.nona <- thedata[285:300,]
rm(y)
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) {
if(is.na(x[1])) {as.integer(subset(averagesteps,interval==x[3])[1,2])}
else {as.integer(x[1])}
})
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) {
if(is.na(x[1])) {(subset(averagesteps,interval==x[3])[1,2])}
else {as.integer(x[1])}
})
thedata.nona <- thedata
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) {
if(is.na(x[1])) {(subset(averagesteps,interval==x[3])[1,2])}
else {as.integer(x[1])}
})
thedata.nona <- thedata
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) {
if(is.na(x[1])) {as.integer(x[3])}
else {as.integer(x[1])}
})
thedata.nona <- thedata
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) {
if(is.na(x[1])) {(subset(averagesteps,interval==x[3])[1,2])}
else {as.integer(x[1])}
})
subset(averagesteps,interval==0)[1,2])
subset(averagesteps,interval==0)[1,2]
subset(averagesteps,interval==5)[1,2]
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) {
if(is.na(x[1])) { subset(averagesteps,interval==x[3])[1,2] }
else { as.integer(x[1]) }
})
thedata.nona <- thedata
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) {
if(is.na(x[1])) { subset(averagesteps,interval==x[3])[1,2] }
else { as.integer(x[1]) }
})
sum(is.na(thedata.nona$step))
sum(is.na(thedata.nona$steps))
sum(is.na(thedata.nona$steps.nona))
thedata.nona$steps.nona<-apply(thedata.nona, 1, function(x) {
if(is.na(x[1])) { subset(averagesteps,interval==as.integer(x[3]))[1,2] }
else { as.integer(x[1]) }
})
sum(is.na(thedata.nona$steps.nona))
thedata.nona[285:300,]
?par
?weekdays
thedata.nona[,2]
weekdays(thedata.nona[,2])
?as.factor
thedata.nona$weekday <- weekdays(thedata.nona$date)
thedata.nona$weekday <- as.factor(weekdays(thedata.nona$date))
?weekdays
thedata.nona$weekday
thedata.nona$weekday %in% c("Saturday", "Sunday")
thedata.nona$weekpart <- thedata.nona$weekday %in% c("Saturday", "Sunday")
thedata.nona$weekpart <- as.factor(thedata.nona$weekday %in% c("Saturday", "Sunday"))
levels(thedata.nona$weekpart)
levels(thedata.nona$weekpart) <- c("Weekday","Weekend")
averagesteps.weekpart <- aggregate(steps ~ interval+weekpart, data=thedata.nona,FUN="mean")
plot(averagesteps.weekpart)
plot(averagesteps.weekpart, type="l")
plot(averagesteps.weekpart, type="line")
plot(averagesteps.weekpart, type="1")
plot(averagesteps.weekpart)
line(averagesteps.weekpart)
?ploy
?plot
plot(averagesteps.weekpart$interval,averagesteps.weekpart$steps)
plot(averagesteps.weekpart$interval,averagesteps.weekpart$steps, type="l")
plot(averagesteps.weekpart$interval,averagesteps.weekpart$steps, type="l", col=averagesteps$weekpart)
library(ggplot2)
qplot(averagesteps.nona)
qplot(averagesteps.weekpart)
?qplot
qplot(interval,steps,data=averagesteps.weekpart)
qplot(interval,steps,data=averagesteps.weekpart, geom="l")
qplot(interval,steps,data=averagesteps.weekpart, geom="line")
qplot(interval,steps,data=averagesteps.weekpart, geom="line", facets=weekpart)
qplot(interval,steps,data=averagesteps.weekpart, geom="line", facets=averagesteps.weekpart$weekpart)
qplot(interval,steps,data=averagesteps.weekpart, geom="line")
qplot(interval,steps,data=averagesteps.weekpart, geom="line", color=weekpart)
averagesteps.weekdays <- aggregate(steps ~ interval+weekday, data=thedata.nona,FUN="mean")
qplot(interval,steps,data=averagesteps.weekdays, geom="line", color=weekday)
averagesteps.weekdays <- aggregate(steps ~ interval+weekday, data=thedata.nona,FUN="mean")
qplot(interval,steps,data=averagesteps.weekdays, geom="line", color=weekday, facet=weekday~.)
averagesteps.weekdays <- aggregate(steps ~ interval+weekday, data=thedata.nona,FUN="mean")
qplot(interval,steps,data=averagesteps.weekdays, geom="line", facet=weekday~.)
averagesteps.weekdays <- aggregate(steps ~ interval+weekday, data=thedata.nona,FUN="mean")
qplot(interval,steps,data=averagesteps.weekdays, geom="line", facets=weekday~.)
setwd("~/GitHub/RepData_PeerAssessment1")
